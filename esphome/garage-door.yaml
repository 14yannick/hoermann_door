# These substitutions allow the end user to override certain values
substitutions:
  name: "e3-supra-pic16"
  friendly_name: "E3 Supramatic PIC16"
esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  name_add_mac_suffix: false
  platform: ESP8266
  board: esp01_1m
  includes:
    - components/uap

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

api:
  encryption:
    key: !secret api_key_e3_supra_pic16
  
ota:  
  - platform: esphome
    password: !secret ota_password

# Enable logging
logger:
  level: DEBUG
  esp8266_store_log_strings_in_flash: False
  baud_rate: 0 # Disable Serial logging to avoid conflict with uart bus on UART0

uart:
  id: uart_bus
  tx_pin: GPIO15
  rx_pin: GPIO13
  baud_rate: 19200

custom_component:
  - id: garage_door_comp
    lambda: |-
      auto door_component = new GarageDoorComponent(id(uart_bus));
      return {door_component};

text_sensor:
  - platform: custom
    id: garagedoor
    lambda: |-
      return {garage_door_get_comp(garage_door_comp)->state_sensor};
    text_sensors:
      name: "esp_garage_door_state"

cover:
  - platform: template
    id: garage_door_template
    name: "esp_garage_door"
    device_class: garage
    open_action:
      - lambda: |-
          garage_door_get_comp(garage_door_comp)->action_open();
      - logger.log: "Template Garage open"
    close_action:
      - lambda: |-
          garage_door_get_comp(garage_door_comp)->action_close();
      - logger.log: "Template Garage close"
    stop_action:
      - lambda: |-
          garage_door_get_comp(garage_door_comp)->action_stop();
      - logger.log: "Template Garage stop"
    lambda: |-
      auto state = garage_door_get_comp(garage_door_comp)->state_sensor->state.c_str();
      if (strcmp(state, "closed") == 0) {
        return COVER_CLOSED;
      } else if (strcmp(state, "opening") == 0 || strcmp(state, "closing") == 0) {
        return {};
      } else {
        return COVER_OPEN;
      }

switch:
- platform: custom
  lambda: |-
    return {
      garage_door_get_comp(garage_door_comp)->venting_switch,
      garage_door_get_comp(garage_door_comp)->light_switch
    };
  switches:
    - name: "esp_garage_door_venting_position"
    - name: "esp_garage_door_light_toggle"    